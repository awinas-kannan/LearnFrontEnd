1 : Set Up a TypeScript Project
Create a new directory for your project:


mkdir my-typescript-project
cd my-typescript-project
Initialize a new Node.js project:
    npm init -y
    This creates a package.json file with default settings.

Install TypeScript locally in your project (optional but recommended):
    npm install --save-dev typescript

Create a tsconfig.json file:
    npx tsc --init
    This command generates a tsconfig.json file with default TypeScript configurations.

Compile the TypeScript file:
    npx tsc index.ts
    This will compile index.ts into index.js.

Run the compiled JavaScript file:
    node index.js


Type Scripts basics:

2 : Basic Types



Function :
TypeScript supports various ways to define and use functions, each suitable for different scenarios. These include:

Function Declarations: Named functions defined using the function keyword.
Function Expressions: Anonymous functions assigned to variables.
Arrow Functions: Concise syntax, especially useful for inline functions.
Optional and Default Parameters: Making parameters optional or giving them default values.
Rest Parameters: Handling an indefinite number of arguments.
Function Overloading: Multiple function signatures for different parameter types.
Function Types: Explicitly typing functions and their parameters.
Methods: Defining functions within objects and classes.
Higher-Order Functions: Functions that operate on other functions